name: build
on: [push]
jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
  update-version:
    name: Update Version
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Fetch next version
        id: fetch-next-version
        uses: anothrNick/github-tag-action@1.22.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DRY_RUN: true
      - run: sed -i 's/version = ".*/version = "${{steps.fetch-next-version.outputs.new_tag}}"/' Cargo.toml
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply automatic version update
      - run: git rev-parse --short HEAD
  build-windows:
    name: Build Windows
    needs: update-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: git remote set-url origin ${{ secrets.ssh }}
      - run: git pull
      - run: git rev-parse --short HEAD
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=x86_64-pc-windows-gnu
      - uses: actions/upload-artifact@v2
        with:
          name: x86_64 Windows
          path: target/x86_64-pc-windows-gnu/release/tjm.exe
  build-linux:
    name: Build Linux
    needs: update-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=x86_64-unknown-linux-gnu
      - uses: actions/upload-artifact@v2
        with:
          name: x86_64 Linux
          path: target/x86_64-unknown-linux-gnu/release/tjm
  build-mac:
    name: Build Mac
    needs: update-version
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=x86_64-apple-darwin
      - uses: actions/upload-artifact@v2
        with:
          name: x86_64 Mac
          path: target/x86_64-apple-darwin/release/tjm
  create-release:
    name: Create Release
    needs: [build-windows, build-linux, build-mac]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: '0'
      - name: bump tag version
        id: bump_tag_version
        uses: anothrNick/github-tag-action@1.22.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump_tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.bump_tag_version.outputs.new_tag }}
          draft: false
          prerelease: false
      - uses: actions/download-artifact@v2
        id: download-compiled-artifacts
        with:
          path: artifacts
      - uses: papeloto/action-zip@v1
        with:
          files: 'artifacts/'
          recursive: false
          dest: binaries.zip
      - name: Upload Assets
        id: upload-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./binaries.zip
          asset_name: binaries.zip
          asset_content_type: application/zip
